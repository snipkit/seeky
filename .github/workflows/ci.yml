name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-formatting:
    name: Check Formatting (Prettier/Black/Rustfmt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Node.js formatting (Prettier)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
        working-directory: ./ # Adjust if your package.json is elsewhere
      - run: npx prettier --check .
        working-directory: ./ # Checks all supported files

      # Python formatting (Black)
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - run: pip install black
      - run: black --check .

      # Rust formatting (rustfmt)
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fmt --all -- --check

  lint-and-test:
    name: Lint & Test (TS, Rust, Python)
    runs-on: ubuntu-latest
    needs: check-formatting
    steps:
      - uses: actions/checkout@v4

      # Node.js Lint & Test
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
        working-directory: ./ # Adjust if needed
      - run: npm run lint
        working-directory: ./ # Assumes you have a lint script
      - run: npm test
        working-directory: ./ # Assumes you have a test script
      - run: npm run build
        working-directory: ./ # Build step, if needed

      # Python Lint & Test
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - run: pip install -r requirements.txt
        if: exists('requirements.txt')
      - run: pip install pytest
      - run: pytest

      # Rust Lint & Test
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo clippy --all -- -D warnings
      - run: cargo test --all
